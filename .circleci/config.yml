version: 2.1
jobs:
  build:
    environment:
      SITENAME: "CircleCI 2.1"
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
           - img-v1-{{checksum "docker/cdash.docker"}}
      - run:
          name: MySQL Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_environment mysql
            if [ -f "/home/circleci/circle-cache/cdash-image.tar.gz" ]; then
              docker load -i /home/circleci/circle-cache/cdash-image.tar.gz
            else
              cdash_build_image
              mkdir -p /home/circleci/circle-cache
              docker save kitware/cdash:testing | gzip > /home/circleci/circle-cache/cdash-image.tar.gz
            fi
      - save_cache:
          key: img-v1-{{checksum "docker/cdash.docker"}}
          paths:
            - /home/circleci/circle-cache/cdash-image.tar.gz
      - run:
          name: Spin Up MySQL Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_start_docker_services
            cdash_wait_for_ready http://localhost/ping 12
      - run:
          name: Test MySQL Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_run_and_submit_mysql_ctest
      - run:
          name: Tear Down MySQL Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_stop_docker_services
      - run:
          name: Spin Up Postgres Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_environment postgres
            cdash_start_docker_services
      - run:
          name: Test Postgres Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            docker exec cdash bash -c "cp /home/kitware/cdash/.circleci/postgres/env /home/kitware/cdash/.env"
            cdash_run_and_submit_pgsql_ctest
      - run:
          name: Update Docker Image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              cp docker/cdash.docker Dockerfile
              docker build -t kitware/cdash:latest .
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push kitware/cdash:latest
            fi
